name: CI/CD Den Haag website branch

on:
  push:
    branches:
      - www.denhaag.nl
  pull_request:
    branches:
      - www.denhaag.nl

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up Node.js version
        uses: actions/setup-node@v4.0.2
        with:
          node-version-file: ".nvmrc"

      - uses: pnpm/action-setup@v3.0.0
        name: Install pnpm
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile
          pnpm ls --recursive

      - name: run linters
        run: |
          pnpm run lint:css
          pnpm run lint:package
          pnpm run lint:js
          pnpm run lint:prettier

      - name: build library
        run: |
          pnpm run build:library

      - name: typecheck
        run: |
          pnpm run typecheck

      - name: build storybook
        run: |
          pnpm run build:storybook

  publish-npm:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/www.denhaag.nl'

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_ADMIN_TOKEN }}

      - name: Set up Node.js version
        uses: actions/setup-node@v4.0.2
        with:
          node-version-file: ".nvmrc"

      - uses: pnpm/action-setup@v3.0.0
        name: Install pnpm
        id: pnpm-install
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"
      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile
          pnpm ls --recursive

      - name: build library
        run: pnpm run build

      - name: lerna version
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
          GIT_AUTHOR_NAME: "Den Haag website"
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          GIT_COMMITTER_NAME: "Den Haag website"
        run: |
          git push --set-upstream origin HEAD
          pnpm run release-denhaag-nl

      - name: lerna publish
        env:
          GH_ADMIN_TOKEN: ${{ secrets.GH_ADMIN_TOKEN }}
        run: |
          pnpm config set "//npm.pkg.github.com/:_authToken" "${GH_ADMIN_TOKEN}"
          pnpm config set access public
          pnpm run publish
          pnpm config delete "//npm.pkg.github.com/:_authToken"
